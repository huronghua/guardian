<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.banmatrip.guardian.repository.mapper.membership.UserDataRangeMapper" >
  <resultMap id="BaseResultMap" type="com.banmatrip.guardian.domain.UserDataRange" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="user_id" property="userId" jdbcType="INTEGER" />
    <result column="data_range_type" property="dataRangeType" jdbcType="CHAR" />
    <result column="data_range_id" property="dataRangeId" jdbcType="INTEGER" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
    <result column="creat_id" property="creatId" jdbcType="INTEGER" />
    <result column="update_id" property="updateId" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, user_id, data_range_type, data_range_id, create_time, update_time, creat_id,
    update_id
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from sso_user_data_range
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from sso_user_data_range
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.banmatrip.guardian.domain.UserDataRange" >
    insert into sso_user_data_range (id, user_id,
      data_range_type, data_range_id, create_time, 
      update_time, creat_id, update_id
      )
    values (#{id,jdbcType=INTEGER}, #{userId,jdbcType=INTEGER},
      #{dataRangeType,jdbcType=CHAR}, #{dataRangeId,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP}, 
      #{updateTime,jdbcType=TIMESTAMP}, #{creatId,jdbcType=INTEGER}, #{updateId,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.banmatrip.guardian.domain.UserDataRange" >
    insert into sso_user_data_range
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="userId != null" >
        user_id,
      </if>
      <if test="dataRangeType != null" >
        data_range_type,
      </if>
      <if test="dataRangeId != null" >
        data_range_id,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="updateTime != null" >
        update_time,
      </if>
      <if test="creatId != null" >
        creat_id,
      </if>
      <if test="updateId != null" >
        update_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="userId != null" >
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="dataRangeType != null" >
        #{dataRangeType,jdbcType=CHAR},
      </if>
      <if test="dataRangeId != null" >
        #{dataRangeId,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="creatId != null" >
        #{creatId,jdbcType=INTEGER},
      </if>
      <if test="updateId != null" >
        #{updateId,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.banmatrip.guardian.domain.UserDataRange" >
    update sso_user_data_range
    <set >
      <if test="userId != null" >
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="dataRangeType != null" >
        data_range_type = #{dataRangeType,jdbcType=CHAR},
      </if>
      <if test="dataRangeId != null" >
        data_range_id = #{dataRangeId,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="creatId != null" >
        creat_id = #{creatId,jdbcType=INTEGER},
      </if>
      <if test="updateId != null" >
        update_id = #{updateId,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.banmatrip.guardian.domain.UserDataRange" >
    update sso_user_data_range
    set user_id = #{userId,jdbcType=INTEGER},
      data_range_type = #{dataRangeType,jdbcType=CHAR},
      data_range_id = #{dataRangeId,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      creat_id = #{creatId,jdbcType=INTEGER},
      update_id = #{updateId,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <delete id="deleteByUserId" parameterType="java.lang.Integer" >
    delete from sso_user_data_range
    where user_id = #{userId}
  </delete>

  <insert id="insertDataRange" parameterType="java.util.Map" >
    insert into sso_user_data_range (user_id,
    data_range_type, data_range_id, create_time,
    update_time
    )
    values
    <if test="data !=null ">
      <foreach collection="data" index="index" item="item" separator=",">
        (#{id},
        #{rangeType}, #{item}, now(),
        now()
        )
      </foreach>
    </if>
    <if test="data ==null ">
        (#{id},
        #{rangeType}, null, now(),
        now()
        )
    </if>

  </insert>

  <select id="selectCheckedData" resultType="java.lang.Integer">
    select
    data_range_id
    from sso_user_data_range
    where user_id = #{param1,jdbcType=INTEGER} and data_range_type = #{param2}
  </select>

  <insert id="insertDataRangeByDataList" parameterType="java.util.List" >
    insert into sso_user_data_range (user_id,data_range_type, data_range_id, create_time,update_time)
    values
    <foreach collection="list" index="index" item="tmp" separator=",">
      <if test="tmp.data != null ">
        <foreach collection="tmp.data" index="index" item="item" separator=",">
          (#{tmp.id},#{tmp.rangeType}, #{item}, now(),now())
        </foreach>
      </if>
    </foreach>
  </insert>
  <delete id="deleteDataRangeByList" parameterType="java.util.List" >
    DELETE FROM sso_user_data_range
    WHERE user_id IN
    <foreach collection="list" index="index" item="tmp" separator="," open="(" close=")">
          #{tmp.id}
    </foreach>
  </delete>
  <delete id="deleteDataRangeRoleByList" parameterType="java.util.LinkedHashMap" >
    DELETE FROM sso_user_role
    WHERE user_id IN
    <foreach collection="list" index="index" item="tmp" separator="," open="(" close=")">
      #{tmp.id}
    </foreach>
    AND role_id IN
    <foreach collection="roleList" index="index" item="roleTmp" separator="," open="(" close=")">
      #{roleTmp}
    </foreach>
  </delete>
  <update id="updateRoleRangeByList" parameterType="java.util.List">
    INSERT INTO sso_user_role (user_id,role_id,create_time,update_time,update_id,delete_flag)
    VALUES
    <foreach collection="list" index="index" item="tmp" separator=",">
      <if test="tmp.role != null ">
        <foreach collection="tmp.role" index="index" item="item" separator=",">
          (#{tmp.id},#{item},now(),now(),#{tmp.updateId},"N")
        </foreach>
      </if>
    </foreach>
  </update>
  <delete id="deleteRoleByUserId">
    DELETE FROM sso_user_role
    WHERE user_id = #{id} AND role_id IN
    <foreach collection="roleList" index="index" item="roleTmp" separator="," open="(" close=")">
      #{roleTmp}
    </foreach>
  </delete>
  <insert id="insertRoleByEditInfo">
    INSERT INTO sso_user_role (user_id,role_id,create_time,update_time,update_id,delete_flag)
    VALUES
    <foreach collection="list" index="index" item="item" separator=",">
      (#{id},#{item},now(),now(),#{updateId},"N")
    </foreach>
  </insert>
</mapper>