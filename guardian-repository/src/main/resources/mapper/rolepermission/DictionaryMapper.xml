<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.banmatrip.guardian.repository.mapper.rolepermission.DictionaryMapper" >
  <resultMap id="BaseResultMap" type="com.banmatrip.guardian.domain.Dictionary" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="code" property="code" jdbcType="VARCHAR" />
    <result column="type" property="type" jdbcType="CHAR" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
    <result column="create_id" property="createId" jdbcType="INTEGER" />
    <result column="update_id" property="updateId" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, name, code, type, create_time, update_time, create_id, update_id
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from sso_dictionary
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from sso_dictionary
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.banmatrip.guardian.domain.Dictionary" >
    insert into sso_dictionary (id, name, code, 
      type, create_time, update_time, 
      create_id, update_id)
    values (#{id,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, #{code,jdbcType=VARCHAR}, 
      #{type,jdbcType=CHAR}, #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}, 
      #{createId,jdbcType=INTEGER}, #{updateId,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.banmatrip.guardian.domain.Dictionary" >
    insert into sso_dictionary
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="name != null" >
        name,
      </if>
      <if test="code != null" >
        code,
      </if>
      <if test="type != null" >
        type,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="updateTime != null" >
        update_time,
      </if>
      <if test="createId != null" >
        create_id,
      </if>
      <if test="updateId != null" >
        update_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="name != null" >
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="code != null" >
        #{code,jdbcType=VARCHAR},
      </if>
      <if test="type != null" >
        #{type,jdbcType=CHAR},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createId != null" >
        #{createId,jdbcType=INTEGER},
      </if>
      <if test="updateId != null" >
        #{updateId,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.banmatrip.guardian.domain.Dictionary" >
    update sso_dictionary
    <set >
      <if test="name != null" >
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="code != null" >
        code = #{code,jdbcType=VARCHAR},
      </if>
      <if test="type != null" >
        type = #{type,jdbcType=CHAR},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createId != null" >
        create_id = #{createId,jdbcType=INTEGER},
      </if>
      <if test="updateId != null" >
        update_id = #{updateId,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.banmatrip.guardian.domain.Dictionary" >
    update sso_dictionary
    set name = #{name,jdbcType=VARCHAR},
      code = #{code,jdbcType=VARCHAR},
      type = #{type,jdbcType=CHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      create_id = #{createId,jdbcType=INTEGER},
      update_id = #{updateId,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>

  <select id="selectForPosition" resultType="java.lang.String">
    SELECT
      `name`
    FROM
      sso_dictionary
    WHERE
      `code` = #{position} AND `type` = 1
  </select>
  <select id="selectForRoleType" parameterType="java.util.List" resultType="java.lang.String">
    SELECT
    `name`
    FROM
    sso_dictionary
    WHERE
    `type` = 2 AND `code` IN
    <foreach collection="list" item="item" index="index" open="(" separator="," close=")">
      #{item}
    </foreach>
  </select>

  <select id="selectByPositionName" parameterType="java.lang.String" resultType="java.lang.Integer">
    SELECT `code`
    FROM sso_dictionary
    WHERE `type` = 1 AND `name` = #{position}
  </select>
  <select id="selectByRoleType" parameterType="java.lang.String" resultType="java.lang.String">
    SELECT `code`
    FROM sso_dictionary
    WHERE `type` = 2 AND `name` = #{roleType}
  </select>
  <select id="selectAllDepartmentType" resultType="java.util.Map">
    select
    <include refid="Base_Column_List" />
    from sso_dictionary
    where `type` = 4
  </select>
  <select id="selectAllResourceType" resultType="java.util.Map">
    select
    <include refid="Base_Column_List" />
    from sso_dictionary
    where `type` = 3
  </select>

  <select id="getDictionary" resultType="java.util.Map" parameterType="java.lang.Integer" >
    select
    id,`name`,code,type
    FROM sso_dictionary
    WHERE `type` = #{type}
  </select>
  <select id="selectByResourceTypeString" parameterType="java.util.List" resultType="java.lang.String">
    SELECT `code`
    FROM sso_dictionary
    WHERE `type` = 3 AND
    `name` IN
    <foreach collection="list" item="item" index="index" open="(" separator="," close=")">
      #{item}
    </foreach>
  </select>
  <select id="selectEthnicById" parameterType="java.lang.String" resultType="java.lang.String">
    SELECT `name`
    FROM sso_dictionary
    WHERE `type` = 7 AND `code` = #{ethnic}
  </select>
  <select id="selectByEthnic" parameterType="java.lang.String" resultType="java.lang.String">
    SELECT `code`
    FROM sso_dictionary
    WHERE `type` = 7 AND `name` = #{ethnic}
  </select>

  <select id="getDictionaryList" resultType="java.util.Map">
     SELECT
	a.id,
	a.`name`,
	a.CODE,
	b.`name` AS type,
	a.type AS 'type_id'
    FROM
	sso_dictionary a
    JOIN (
	SELECT
		*
	FROM
		sso_dictionary
	WHERE
		type = 8
    ) b ON b.`code` = a.type
        order by
    a.type,a.CODE
  </select>

  <select id="searchDictionaryByName" resultType="java.util.Map">
    SELECT
    a.id,
    a.`name`,
    a.CODE,
    b.`name` AS type,
    a.type as 'type_id'
    FROM
        sso_dictionary a
    JOIN (
    SELECT
        *
    FROM
        sso_dictionary
    WHERE
        type = 8
    ) b ON b.`code` = a.type
    where a.`name` LIKE CONCAT(CONCAT('%', #{searchtext}), '%')
  </select>

  <select id="selectCountByTypeAndName" parameterType="com.banmatrip.guardian.domain.Dictionary" resultType="java.lang.Integer">
    select count(*) from sso_dictionary where 1=1
    <if test="name != null" >
      and `name` = #{name,jdbcType=VARCHAR}
    </if>
    <if test="type != null" >
      and type = #{type,jdbcType=CHAR}
    </if>
  </select>

  <!--获取所有字典表配置的类型-->
  <select id="getDictionaryType" resultType="java.util.Map">
    SELECT
        `name` AS dictionaryName,
        `code` AS dictionaryType
    FROM
        `sso_dictionary`
    WHERE
        type = 8
  </select>

  <insert id="createDictionary" parameterType="com.banmatrip.guardian.domain.Dictionary">
    INSERT INTO sso_dictionary (`name`, `code`, `type`)
    VALUES
    (
    #{name},
    (
    SELECT
    *
    FROM
    (
    SELECT
    MAX(CAST(`code` AS signed)) + 1
    FROM
    sso_dictionary
    WHERE
    type = #{type}
    ) temp
    ),
    #{type}
    )
  </insert>

  <select id="selectByRole" parameterType="java.util.List" resultType="java.lang.String">
    SELECT `id`
    FROM sso_role
    WHERE `name` IN
    <foreach collection="list" item="item" index="index" open="(" separator="," close=")">
      #{item}
    </foreach>
  </select>

  <select id="selectPlatCount" resultType="java.lang.Integer">
    SELECT
	COUNT(id)
    FROM
	order_platform
	WHERE delete_flag = 0
  </select>

  <select id="selectProCount" resultType="java.lang.Integer">
    SELECT
    COUNT(id)
    FROM
    product_order_tag
  </select>

  <select id="selectDesCount" resultType="java.lang.Integer">
    SELECT
    COUNT(id)
    FROM
    tag
    WHERE group_id = 2 and delete_flag = 0
  </select>

  <select id="selectResCount" resultType="java.lang.Integer">
    select
    COUNT(id)
    FROM sso_dictionary
    WHERE `type` = 3
  </select>

  <select id="selectPlatIdList" resultType="java.lang.Integer">
    SELECT
    id
    FROM
    order_platform
    WHERE delete_flag = 0
  </select>

  <select id="selectProIdList" resultType="java.lang.Integer">
    SELECT
    id
    FROM
    product_order_tag
  </select>

  <select id="selectDesIdList" resultType="java.lang.Integer">
    SELECT
    id
    FROM
    tag
    WHERE group_id = 2 and delete_flag = 0
  </select>

  <select id="selectResIdList" resultType="java.lang.Integer">
    select
    id
    FROM sso_dictionary
    WHERE `type` = 3
  </select>


</mapper>