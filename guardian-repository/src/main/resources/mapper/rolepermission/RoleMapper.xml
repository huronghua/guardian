<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.banmatrip.guardian.repository.mapper.rolepermission.RoleMapper" >
  <resultMap id="BaseResultMap" type="com.banmatrip.guardian.domain.Role" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="group_id" property="groupId" jdbcType="INTEGER" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
    <result column="create_id" property="createId" jdbcType="INTEGER" />
    <result column="update_id" property="updateId" jdbcType="INTEGER" />
    <result column="destination_type" property="destinationType" jdbcType="INTEGER" />
    <result column="product_type" property="productType" jdbcType="INTEGER" />
    <result column="platform_type" property="platformType" jdbcType="INTEGER" />
    <result column="resource_type" property="resourceType" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, name, group_id, create_time, update_time, create_id, update_id, destination_type,
    product_type, platform_type, resource_type
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from sso_role
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from sso_role
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.banmatrip.guardian.domain.Role" >
    insert into sso_role (id, name, group_id, 
      create_time, update_time, create_id, 
      update_id, destination_type, product_type,
      platform_type, resource_type)
    values (#{id,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, #{groupId,jdbcType=INTEGER}, 
      #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}, #{createId,jdbcType=INTEGER}, 
      #{updateId,jdbcType=INTEGER}, #{destinationType,jdbcType=INTEGER}, #{productType,jdbcType=INTEGER},
      #{platformType,jdbcType=INTEGER}, #{resourceType,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.banmatrip.guardian.domain.Role" >
    insert into sso_role
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="name != null" >
        name,
      </if>
      <if test="groupId != null" >
        group_id,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="updateTime != null" >
        update_time,
      </if>
      <if test="createId != null" >
        create_id,
      </if>
      <if test="updateId != null" >
        update_id,
      </if>
      <if test="destinationType != null" >
        destination_type,
      </if>
      <if test="productType != null" >
        product_type,
      </if>
      <if test="platformType != null" >
        platform_type,
      </if>
      <if test="resourceType != null" >
        resource_type,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="name != null" >
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="groupId != null" >
        #{groupId,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createId != null" >
        #{createId,jdbcType=INTEGER},
      </if>
      <if test="updateId != null" >
        #{updateId,jdbcType=INTEGER},
      </if>
      <if test="destinationType != null" >
        #{destinationType,jdbcType=INTEGER},
      </if>
      <if test="productType != null" >
        #{productType,jdbcType=INTEGER},
      </if>
      <if test="platformType != null" >
        #{platformType,jdbcType=INTEGER},
      </if>
      <if test="resourceType != null" >
        #{resourceType,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.banmatrip.guardian.domain.Role" >
    update sso_role
    <set >
      <if test="name != null" >
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="groupId != null" >
        group_id = #{groupId,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createId != null" >
        create_id = #{createId,jdbcType=INTEGER},
      </if>
      <if test="updateId != null" >
        update_id = #{updateId,jdbcType=INTEGER},
      </if>
      <if test="destinationType != null" >
        destination_type = #{destinationType,jdbcType=INTEGER},
      </if>
      <if test="productType != null" >
        product_type = #{productType,jdbcType=INTEGER},
      </if>
      <if test="platformType != null" >
        platform_type = #{platformType,jdbcType=INTEGER},
      </if>
      <if test="resourceType != null" >
        resource_type = #{resourceType,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.banmatrip.guardian.domain.Role" >
    update sso_role
    set name = #{name,jdbcType=VARCHAR},
      group_id = #{groupId,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      create_id = #{createId,jdbcType=INTEGER},
      update_id = #{updateId,jdbcType=INTEGER},
      destination_type = #{destinationType,jdbcType=INTEGER},
      product_type = #{productType,jdbcType=INTEGER},
      platform_type = #{platformType,jdbcType=INTEGER},
      resource_type = #{resourceType,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>

  <update id="updateDataRange" parameterType="com.banmatrip.guardian.vo.role.RoleVo">
    update sso_role set
    destination_type = #{destinationType,jdbcType=INTEGER},
    product_type = #{productType,jdbcType=INTEGER},
    platform_type = #{platformType,jdbcType=INTEGER},
    resource_type = #{resourceType,jdbcType=INTEGER}
    where id=#{roleId,jdbcType=INTEGER}
  </update>

  <insert id="addRole" parameterType="com.banmatrip.guardian.vo.role.RoleVo">
    insert into sso_role
    (name,
    group_id,
    create_time,
    update_time,
    create_id,
    update_id)
    values (
    #{roleName,jdbcType=VARCHAR},
    #{groupId,jdbcType=INTEGER},
    now(),
    now(),
    #{createId,jdbcType=INTEGER},
    #{updateId,jdbcType=INTEGER}
    )
  </insert>

  <update id="updateRole" parameterType="com.banmatrip.guardian.vo.role.RoleVo">
    update sso_role
    <set>
      <if test="roleName != null" >
        name = #{roleName,jdbcType=VARCHAR},
      </if>
      <if test="groupId != null" >
        group_id = #{groupId,jdbcType=INTEGER},
      </if>
      <if test="updateTime != null" >
        update_time = now(),
      </if>
      <if test="updateId != null" >
        update_id = #{updateId,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{roleId,jdbcType=INTEGER}
  </update>

  <!--根据角色组id查询出所有角色-->
  <select id="findRolesByGroupId" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select
    <include refid="Base_Column_List" />
    from sso_role
    where group_id = #{groupId,jdbcType=INTEGER}
  </select>

  <select id="findAll" resultMap="BaseResultMap">
    select
    *
    FROM sso_role WHERE group_id <![CDATA[!= ]]> 1
  </select>
  <select id="findAllForUser" resultType="java.lang.Integer">
    select
    id
    FROM sso_role WHERE group_id <![CDATA[!= ]]> 1
  </select>
  <select id="findAllForCheck" resultMap="BaseResultMap">
    select
    *
    FROM sso_role
  </select>

  <!--根据角色名字查询ID-->
 <select id="findRoleIdByName" resultType="java.lang.Integer">
    select id from sso_role where `name`=#{roleName} and group_id=#{groupId}
 </select>

  <!--查询角色组内是否有该角色-->
  <select id="findRoleCount" resultType="java.lang.Integer">
    select count(*) from sso_role where `name`=#{roleName} and group_id=#{groupId}
  </select>

  <select id="selectMemberRoleById" resultType="java.util.LinkedHashMap" parameterType="java.util.List">
    SELECT a.user_id AS userId,GROUP_CONCAT(a.role_id) AS roleId
    FROM sso_user_role a
    LEFT JOIN sso_role b ON b.id = a.role_id
    WHERE b.group_id != 1 AND
    a.user_id IN
    <foreach collection="list" item="item" index="index" open="(" separator="," close=")">
      #{item}
    </foreach>
    GROUP BY a.user_id
  </select>
  <insert id="insertOneUserRoleByUserList" useGeneratedKeys="true" keyProperty="id">
    INSERT INTO sso_user_role (user_id,role_id,create_time,update_time,update_id,delete_flag)
    VALUES
    (#{userId},#{role},now(),now(),#{createId},"N")
  </insert>
  <select id="selectRoleListNow" resultType="java.lang.Integer">
    SELECT role_id
    FROM sso_user_role
    WHERE user_id = #{id} AND delete_flag = "N"
  </select>
  <delete id="deleteChargeRole" parameterType="java.util.LinkedHashMap">
    DELETE FROM sso_user_role
    WHERE user_id = #{oldChargeId} AND role_id = #{oldChargeRoleId}
  </delete>
  <insert id="insertChargeRole" parameterType="java.util.LinkedHashMap">
    INSERT INTO sso_user_role (user_id,role_id,create_time,update_time,update_id,delete_flag)
    VALUES (#{chargeId},#{chargeRoleId},now(),now(),#{updateId},"N")
  </insert>
  <!--根据角色ID查找该角色下所有用户的adminId-->
  <select id="findUserAdminIdByRoleId" resultType="java.lang.Integer">
    SELECT
        b.contrast_id AS 'adminId'
    FROM
        (
            SELECT
                user_id
            FROM
                sso_user_role
            WHERE
                delete_flag = 'N'
            AND role_id = #{roleId}
        ) a
    LEFT JOIN sso_contrast_id b ON b.user_id = a.user_id
  </select>

  <!--根据userId查询orange系统的adminId-->
  <select id="selectAdminIdByUserId" resultType="java.lang.Integer">
    SELECT
        contrast_id AS 'adminId'
    FROM
        `sso_contrast_id`
    WHERE
        user_id = #{userId}
  </select>
</mapper>